<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.12.0-alpha3</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

* **Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
* **Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
* **Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
* **Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.12.0-alpha3 (December 6, 2018)

BACKWARDS INCOMPATIBILITIES / NOTES:
* command: Remove `-module-depth` flag from plan, apply, and show. This flag was not widely used and the various updates and improvements to cli output should remove the need for this flag. ([#19267](https://github.com/hashicorp/terraform/issues/19267))
* plugins: The protobuf/grpc package name for the provider protocol was changed from `proto` to `tfplugin5` in preparation for future protocol versioning. This means that plugin binaries built for alpha1 and alpha2 are no longer compatible and will need to be rebuilt. ([#19393](https://github.com/hashicorp/terraform/issues/19393))

IMPROVEMENTS:

* dependencies: upgrading to v21.3.0 of `github.com/Azure/azure-sdk-for-go` ([#19414](https://github.com/hashicorp/terraform/issues/19414))
* dependencies: upgrading to v10.15.4 of `github.com/Azure/go-autorest` ([#19414](https://github.com/hashicorp/terraform/issues/19414))
* backend/azurerm: Fixing a bug where locks couldn't be unlocked ([#19441](https://github.com/hashicorp/terraform/issues/19441))
* backend/azurerm: Support for authenticating via Managed Service Identity ([#19433](https://github.com/hashicorp/terraform/issues/19433))
* backend/azurerm: Support for authenticating using a SAS Token ([#19440](https://github.com/hashicorp/terraform/issues/19440))
* backend/azurerm: Support for custom Resource Manager Endpoints ([#19460](https://github.com/hashicorp/terraform/issues/19460))
* backend/azurerm: Using the proxy from the environment when set ([#19414](https://github.com/hashicorp/terraform/issues/19414))
* backend/azurerm: Deprecating the `arm_` prefix for keys used in the backend configuration ([#19448](https://github.com/hashicorp/terraform/issues/19448))
* command/state: Update and enable the `state show` command ([#19200](https://github.com/hashicorp/terraform/issues/19200))
* command/state: Lock the state when pushing a new state using `state push` ([#19411](https://github.com/hashicorp/terraform/issues/19411))
* backend/remote: Implement the remote enhanced backend ([#19299](https://github.com/hashicorp/terraform/issues/19299))
* backend/remote: Support remote state only usage by dynamically falling back to the local backend ([#19378](https://github.com/hashicorp/terraform/issues/19378))
* backend/remote: Also show Sentinel policy output when there are no changes ([#19403](https://github.com/hashicorp/terraform/issues/19403))
* backend/remote: Add support for the `console`, `graph` and `import` commands ([#19464](https://github.com/hashicorp/terraform/issues/19464))
* backend/remote: Use the new force-unlock API ([#19520](https://github.com/hashicorp/terraform/issues/19520))
* plugin/discovery: Use signing keys from the Terraform Registry when downloading providers. ([#19389](https://github.com/hashicorp/terraform/issues/19389))
* plugin/discovery: Use default `-` namespace alias when fetching available providers from Terraform Registry. ([#19494](https://github.com/hashicorp/terraform/issues/19494))

BUG FIXES:

* command/format: Fix rendering of attribute-agnostic diagnostics ([#19453](https://github.com/hashicorp/terraform/issues/19453))
* core: Fix inconsistent plans when replacing instances. ([#19233](https://github.com/hashicorp/terraform/issues/19233))
* core: Correct handling of unknown values in module outputs during planning and final resolution of them during apply. ([#19237](https://github.com/hashicorp/terraform/issues/19237))
* core: Correct handling of wildcard dependencies when upgrading states ([#19374](https://github.com/hashicorp/terraform/issues/19374))
* core: Fix missing validation of references to non-existing child modules, which was previously resulting in a panic. ([#19487](https://github.com/hashicorp/terraform/issues/19487))
* helper/schema: Don't re-apply schema StateFuncs during apply ([#19536](https://github.com/hashicorp/terraform/issues/19536))
* helper/schema: Allow providers to continue setting and empty string to a default bool value ([#19521](https://github.com/hashicorp/terraform/issues/19521))
* helper/schema: Prevent the insertion of empty diff values when converting legacy diffs ([#19253](https://github.com/hashicorp/terraform/issues/19253))
* helper/schema: Fix timeout parsing during Provider.Diff (plan) ([#19286](https://github.com/hashicorp/terraform/issues/19286))
* helper/schema: Provider arguments set from environment variables now work correctly again, after regressing in the prior 0.12 alphas. ([#19478](https://github.com/hashicorp/terraform/issues/19478))
* helper/schema: For schema attributes that have `Elem` as a nested `schema.Resource`, setting `Optional: true` now forces `MinItems` to be zero, thus mimicking a previously-undocumented behavior that some providers were relying on. ([#19478](https://github.com/hashicorp/terraform/issues/19478))
* helper/schema: Always propagate NewComputed for previously zero value primitive type attributes ([#19548](https://github.com/hashicorp/terraform/issues/19548))
* backend/remote: Fix issues with uploaded configs that contain symlinks ([#19520](https://github.com/hashicorp/terraform/issues/19520))

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.12.0-alpha3/CHANGELOG.md).
    </releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <docsUrl>https://www.terraform.io/docs/index.html</docsUrl>
    <bugTrackerUrl>https://github.com/hashicorp/terraform/issues</bugTrackerUrl>
    <projectSourceUrl>https://github.com/hashicorp/terraform</projectSourceUrl>
    <packageSourceUrl>https://github.com/jamestoyer/chocolatey-packages</packageSourceUrl>
    <tags>terraform hashicorp</tags>
    <copyright>HashiCorp 2015-2018</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://raw.githubusercontent.com/jamestoyer/chocolatey-packages/58ab86c08224c2ba79af2080346c53c1cc440afc/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
